index.html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Random Quote Generator</title>
  <link rel="stylesheet" href="style.css" />
</head>
<body>
  <div class="container">
    <h1>Random Quote Generator</h1>
    <div class="quote-box">
      <p id="quote">Click the button to get a quote!</p>
      <span id="author"></span>
    </div>
    <div class="buttons">
      <button id="new-quote">New Quote</button>
      <button id="copy-quote">Copy Quote</button>
      <button id="toggle-dark">Dark Mode</button>
    </div>
  </div>
  <script src="script.js"></script>
</body>
</html>
style.css
* {
  box-sizing: border-box;
  font-family: "Poppins", sans-serif;
}

body {
  background-color: #f2f2f2;
  color: #333;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  margin: 0;
  transition: background-color 0.3s, color 0.3s;
}

.container {
  text-align: center;
  background: white;
  padding: 30px;
  border-radius: 15px;
  box-shadow: 0 0 15px rgba(0,0,0,0.1);
  width: 90%;
  max-width: 500px;
}

.quote-box {
  margin: 20px 0;
  font-size: 1.2rem;
}

#author {
  display: block;
  margin-top: 10px;
  font-weight: bold;
  color: #555;
}

button {
  margin: 8px;
  padding: 10px 15px;
  border: none;
  border-radius: 8px;
  background-color: #007bff;
  color: white;
  cursor: pointer;
  transition: background 0.3s;
}

button:hover {
  background-color: #0056b3;
}

.dark-mode {
  background-color: #1a1a1a;
  color: #f2f2f2;
}
script.js
const quoteEl = document.getElementById("quote");
const authorEl = document.getElementById("author");
const newQuoteBtn = document.getElementById("new-quote");
const copyBtn = document.getElementById("copy-quote");
const darkModeBtn = document.getElementById("toggle-dark");

async function getQuote() {
  quoteEl.textContent = "Loading...";
  authorEl.textContent = "";

  try {
    const response = await fetch("https://api.quotable.io/random");
    const data = await response.json();
    quoteEl.textContent = `"${data.content}"`;
    authorEl.textContent = `â€” ${data.author}`;
  } catch (error) {
    quoteEl.textContent = "Failed to load quote. Try again!";
    authorEl.textContent = "";
  }
}

newQuoteBtn.addEventListener("click", getQuote);

copyBtn.addEventListener("click", () => {
  navigator.clipboard.writeText(`${quoteEl.textContent} ${authorEl.textContent}`);
  alert("Quote copied to clipboard!");
});

darkModeBtn.addEventListener("click", () => {
  document.body.classList.toggle("dark-mode");
});

window.addEventListener("load", getQuote);

.dark-mode .container {
  background-color: #333;
  color: #f2f2f2;
}
